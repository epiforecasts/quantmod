% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantile_extrapolate.R
\name{quantile_extrapolate}
\alias{quantile_extrapolate}
\title{Quantile extrapolater}
\usage{
quantile_extrapolate(tau, qvals, tau_out = c(0.01, 0.025, seq(0.05, 0.95,
  by = 0.05), 0.975, 0.99), sort = TRUE, iso = FALSE, nonneg = FALSE,
  round = FALSE, qfun_left = qnorm, qfun_right = qnorm,
  n_tau_left = 1, n_tau_right = 1, middle = c("cubic", "linear"),
  param0 = NULL, param1 = NULL, grid_size = 1000, tol = 0.01,
  max_iter = 10)
}
\arguments{
\item{tau}{Vector of quantile levels. Assumed to be distinct, and sorted in 
increasing order.}

\item{qvals}{Vector or matrix quantiles; if a matrix, each row is a separate 
set of quantiles, at the same (common) quantile levels, given by
\code{tau}.}

\item{tau_out}{Vector of quantile levels at which to perform
extrapolation. Default is a sequence of 23 quantile levels from 0.01 to
0.99.}

\item{sort}{Should the quantile estimates be sorted? Default is FALSE. Note:
this option only makes sense if the values in the stored \code{tau} vector
are distinct, and sorted in increasing order.}

\item{iso}{Should the quantile estimates be passed through isotonic
regression? Default is FALSE; if TRUE, takes priority over
\code{sort}. Note: this option only makes sense if the values in the stored 
\code{tau} vector are distinct, and sorted in increasing order.}

\item{qfun_left, qfun_right}{Quantile functions on which to base extrapolation
in the left and right tails, respectively; each must be a function whose
first two arguments are a quantile level and a distribution parameter (such
as a mean parameter); these are assumed to be vectorized in the first
argument when the second argument is fixed, and also vectorized in the
second argument when the first argument is fixed. Default is
\code{qnorm}. See details for further explanation.}

\item{n_tau_left, n_tau_right}{Integers between 1 and the length of
\code{tau}, indicating how many elements quantile levels from the left and
right ends, respectively, to use in defining the tails. For example, if
\code{n_tau_left=1}, the default, then only the leftmost quantile is used
for the left tail extrapolation; if \code{n_tau_left=2}, then the two
leftmost quantiles are used, etc; and similarly for \code{n_tau_right}. See
details for further explanation.}

\item{middle}{One of "cubic" or "linear", indicating the interpolation method
to use in the middle (outside of the tails, as determined by
\code{n_tau_left} and \code{n_tau_right}). If "cubic", the default, then a
monotone cubic spline interpolant is fit to the given quantiles, and used
to estimate quantiles in the middle. If "linear", then linear interpolation
is used to estimate quantiles in the middle.}

\item{param0, param1}{TODO}

\item{grid_size, tol, maxiter}{TODO}

\item{nonneg:}{should the quantile estimates be truncated at 0? Natural for
count data. Default is FALSE.}
}
\value{
A matrix of dimension (number of rows in \code{qvals}) x (length of 
  \code{tau_out}), where each row is the extrapolation of the set of
  quantiles in the corresponding row of \code{qvals}, at the quantile levels 
  specified in \code{tau_out}.
}
\description{
Extrapolate a set of quantiles at new quantile levels: parametric in the
tails, nonparametric in the middle.
}
\details{
TODO
}
